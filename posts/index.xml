<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Fin`s Blog</title>
        <link>http://peapio.github.io/posts/</link>
        <description>所有文章 | Fin`s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aqiiii@yeah.net (Ytq)</managingEditor>
            <webMaster>aqiiii@yeah.net (Ytq)</webMaster><lastBuildDate>Tue, 19 Apr 2022 16:25:47 &#43;0800</lastBuildDate><atom:link href="http://peapio.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>LaTeX学习笔记</title>
    <link>http://peapio.github.io/latex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Tue, 19 Apr 2022 16:25:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/latex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/latex.png" referrerpolicy="no-referrer">
            </div>LaTeX 1.latex的结构 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 % 导言区 \documentclass{article} %一种文档类，也可以是book,report,letter \usepackage{ctex} %使用中文包]]></description>
</item><item>
    <title>连续序列的最大子列和</title>
    <link>http://peapio.github.io/%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C/</link>
    <pubDate>Tue, 19 Apr 2022 13:20:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E5%88%97%E5%92%8C/</guid>
    <description><![CDATA[连续序列的最大子列和 给定N个整数的序列${A_1,A_2,\cdots,A_N}$ 求函数$f(i,j)=max{0,\sum_{k=i}^n]]></description>
</item><item>
    <title>常用代码2</title>
    <link>http://peapio.github.io/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%812/</link>
    <pubDate>Tue, 19 Apr 2022 13:17:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%812/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/acwing.png" referrerpolicy="no-referrer">
            </div>算法基础课相关代码模板 不得不说AcWing真的很良心！2021年春天我补寒假每日一题的一个月真的很充实，也学到了很多东西，但是由于考研就停止]]></description>
</item><item>
    <title>常用代码</title>
    <link>http://peapio.github.io/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/</link>
    <pubDate>Tue, 19 Apr 2022 13:15:33 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/</guid>
    <description><![CDATA[c++常用函数 b进制转换 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 char get(int x)//将x转换为字符形式 { if (x &lt;= 9) return x + &#39;0&#39;; return x - 10 + &#39;A&#39;; } string base(int n, int b)//将n]]></description>
</item><item>
    <title>刷题技巧</title>
    <link>http://peapio.github.io/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/</link>
    <pubDate>Tue, 19 Apr 2022 13:12:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/</guid>
    <description><![CDATA[刷题技巧 记录c++刷题过程中的技巧 vector ​ vector&lt;类型&gt;标识符(最大容量，初始所有值) 1 2 3 vector&lt;vector&lt;int&gt; &gt; cnt(m, vector&lt;int&gt;(5)); stoi(字符串(str)]]></description>
</item><item>
    <title>Markdown数学符号</title>
    <link>http://peapio.github.io/markdown%E6%95%B0%E5%AD%A6%E7%AC%A6%E5%8F%B7/</link>
    <pubDate>Tue, 19 Apr 2022 13:08:42 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/markdown%E6%95%B0%E5%AD%A6%E7%AC%A6%E5%8F%B7/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/markdown.png" referrerpolicy="no-referrer">
            </div>markdown数学符号 ^表示上标， $$ a^1 $$ _表示下标， $$ x_1 $$ 如果上（下）标内容多于一个字符就需要使用{}，注意不是( ), 因为( )经常是公式本身]]></description>
</item><item>
    <title>Git学习笔记</title>
    <link>http://peapio.github.io/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Tue, 19 Apr 2022 13:06:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/git.png" referrerpolicy="no-referrer">
            </div>git的使用方法 基本命令 暂存区(将你的工作结果暂时保存,以便对比) 1 2 3 4 5 git add \\添加到暂存区 git status \\查看状态 git diff \\查看修改后的文件和暂]]></description>
</item><item>
    <title>计算机刷题常用英语词汇</title>
    <link>http://peapio.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%88%B7%E9%A2%98%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</link>
    <pubDate>Tue, 19 Apr 2022 13:03:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%88%B7%E9%A2%98%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</guid>
    <description><![CDATA[记录不会的计算机专用词汇 PTA甲级刷题时不理解词汇 记录在刷题过程中遇到的不会的单词 英文 汉语 digits 数字,位数 Specification 规范 commas 逗号 that is 也就是说 positive numbers 正数 A request list]]></description>
</item><item>
    <title>【DP专辑】ACM动态规划总结</title>
    <link>http://peapio.github.io/dp%E4%B8%93%E8%BE%91acm%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%80%BB%E7%BB%93/</link>
    <pubDate>Tue, 19 Apr 2022 12:40:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/dp%E4%B8%93%E8%BE%91acm%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%80%BB%E7%BB%93/</guid>
    <description><![CDATA[【DP专辑】ACM动态规划总结 闫式DP分析法 置顶 Accagain 2014-05-15 13:43:46 19565 收藏 99 分类专栏： 动态规划 版权 转载请注明出处，谢谢。 http://blog.csdn.net/cc_again?viewmode=list &mdash;&mdash;&mdash;- Accagain 2014年5月15日 动态规划]]></description>
</item><item>
    <title>C&#43;&#43;_STL常用函数</title>
    <link>http://peapio.github.io/c-_stl%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</link>
    <pubDate>Tue, 19 Apr 2022 12:36:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://peapio.github.io/c-_stl%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[C++STL 1.vector 向量:长度根据需要自动改变的数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include &lt;iostream&gt;#include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;vector&gt;using namespace std; int main(){ vector&lt;int&gt; name; for(int i=1;i&lt;=5;i++){ name.push_back(i); } name.insert(name.begin()+name.size(),-1); name.erase(first,last); //利用迭代器的两种遍]]></description>
</item></channel>
</rss>
